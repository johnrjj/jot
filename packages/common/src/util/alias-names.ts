const ADJECTIVES = [
  'anonymous',
  'secret',
  'mysterious',
  'silent',
  'covert',
  'private',
  'secluded',
  'undercover',
  'unknown',
  'undisclosed',
  'mystic',
  'furtive',
  'esoteric',
  'strange',
  'mystical',
  'occult',
  'dark',
  'classified',
  'confidential',
  'sneaky',
  'stealthy',
  'cryptic',
  'discreet',
  'camouflaged',
  'hidden',
  'concealed',
  'cloaked',
  'disguised',
];

const ANIMALS = [
  'Aardvark',
  'Albatross',
  'Alligator',
  'Alpaca',
  'Ant',
  'Anteater',
  'Antelope',
  'Ape',
  'Armadillo',
  'Donkey',
  'Baboon',
  'Badger',
  'Barracuda',
  'ConclaveBot',
  'Bat',
  'Bear',
  'Beaver',
  'Bee',
  'Bison',
  'Boar',
  'Buffalo',
  'Butterfly',
  'Camel',
  'Capybara',
  'Caribou',
  'Cassowary',
  'Cat',
  'Caterpillar',
  'Cattle',
  'Chamois',
  'Cheetah',
  'Chicken',
  'Chimpanzee',
  'Chinchilla',
  'Chough',
  'Clam',
  'Cobra',
  'Cockroach',
  'Cod',
  'Cormorant',
  'Coyote',
  'Crab',
  'Crane',
  'Crocodile',
  'Crow',
  'Curlew',
  'Deer',
  'Dinosaur',
  'Dog',
  'Dogfish',
  'Dolphin',
  'Dotterel',
  'Dove',
  'Dragonfly',
  'Duck',
  'Dugong',
  'Dunlin',
  'Eagle',
  'Echidna',
  'Eel',
  'Eland',
  'Elephant',
  'Elk',
  'Emu',
  'Falcon',
  'Ferret',
  'Finch',
  'Fish',
  'Flamingo',
  'Fly',
  'Fox',
  'Frog',
  'Gaur',
  'Gazelle',
  'Gerbil',
  'Giraffe',
  'Gnat',
  'Gnu',
  'Goat',
  'Goldfinch',
  'Goldfish',
  'Goose',
  'Gorilla',
  'Goshawk',
  'Grasshopper',
  'Grouse',
  'Guanaco',
  'Gull',
  'Hamster',
  'Hare',
  'Hawk',
  'Hedgehog',
  'Heron',
  'Herring',
  'Hippopotamus',
  'Hornet',
  'Horse',
  'Human',
  'Hummingbird',
  'Hyena',
  'Ibex',
  'Ibis',
  'Jackal',
  'Jaguar',
  'Jay',
  'Jellyfish',
  'Kangaroo',
  'Kingfisher',
  'Koala',
  'Kookabura',
  'Kouprey',
  'Kudu',
  'Lapwing',
  'Lark',
  'Lemur',
  'Leopard',
  'Lion',
  'Llama',
  'Lobster',
  'Locust',
  'Loris',
  'Louse',
  'Lyrebird',
  'Magpie',
  'Mallard',
  'Manatee',
  'Mandrill',
  'Mantis',
  'Marten',
  'Meerkat',
  'Mink',
  'Mole',
  'Mongoose',
  'Monkey',
  'Moose',
  'Mosquito',
  'Mouse',
  'Mule',
  'Narwhal',
  'Newt',
  'Nightingale',
  'Octopus',
  'Okapi',
  'Opossum',
  'Oryx',
  'Ostrich',
  'Otter',
  'Owl',
  'Oyster',
  'Panther',
  'Parrot',
  'Partridge',
  'Peafowl',
  'Pelican',
  'Penguin',
  'Pheasant',
  'Pig',
  'Pigeon',
  'Pony',
  'Porcupine',
  'Porpoise',
  'Quail',
  'Quelea',
  'Quetzal',
  'Rabbit',
  'Raccoon',
  'Rail',
  'Ram',
  'Rat',
  'Raven',
  'Reindeer',
  'Rhinoceros',
  'Rook',
  'Salamander',
  'Salmon',
  'Sandpiper',
  'Sardine',
  'Scorpion',
  'Seahorse',
  'Seal',
  'Shark',
  'Sheep',
  'Shrew',
  'Skunk',
  'Snail',
  'Snake',
  'Sparrow',
  'Spider',
  'Spoonbill',
  'Squid',
  'Squirrel',
  'Starling',
  'Stingray',
  'Stinkbug',
  'Stork',
  'Swallow',
  'Swan',
  'Tapir',
  'Tarsier',
  'Termite',
  'Tiger',
  'Toad',
  'Trout',
  'Turkey',
  'Turtle',
  'Viper',
  'Vulture',
  'Wallaby',
  'Walrus',
  'Wasp',
  'Weasel',
  'Whale',
  'Wildcat',
  'Wolf',
  'Wolverine',
  'Wombat',
  'Woodcock',
  'Woodpecker',
  'Worm',
  'Wren',
  'Yak',
  'Zebra',
];

const COLORS = [
  'rgba(255, 0, 255, 0.5)',
  'rgba(255, 51, 255, 0.5)',
  'rgba(204, 0, 204, 0.5)',
  'rgba(255, 102, 255, 0.5)',
  'rgba(204, 51, 204, 0.5)',
  'rgba(153, 0, 153, 0.5)',
  'rgba(255, 153, 255, 0.5)',
  'rgba(204, 102, 204, 0.5)',
  'rgba(153, 51, 153, 0.5)',
  'rgba(102, 0, 102, 0.5)',
  'rgba(255, 204, 255, 0.5)',
  'rgba(204, 153, 204, 0.5)',
  'rgba(153, 102, 153, 0.5)',
  'rgba(17, 117, 232, 0.5)',
  'rgba(102, 51, 102, 0.5)',
  'rgba(51, 0, 51, 0.5)',
  'rgba(204, 0, 255, 0.5)',
  'rgba(204, 51, 255, 0.5)',
  'rgba(153, 0, 204, 0.5)',
  'rgba(204, 102, 255, 0.5)',
  'rgba(153, 51, 204, 0.5)',
  'rgba(102, 0, 153, 0.5)',
  'rgba(204, 153, 255, 0.5)',
  'rgba(153, 102, 204, 0.5)',
  'rgba(102, 51, 153, 0.5)',
  'rgba(51, 0, 102, 0.5)',
  'rgba(153, 0, 255, 0.5)',
  'rgba(153, 51, 255, 0.5)',
  'rgba(102, 0, 204, 0.5)',
  'rgba(153, 102, 255, 0.5)',
  'rgba(102, 51, 204, 0.5)',
  'rgba(51, 0, 153, 0.5)',
  'rgba(102, 0, 255, 0.5)',
  'rgba(102, 51, 255, 0.5)',
  'rgba(51, 0, 204, 0.5)',
  'rgba(51, 0, 255, 0.5)',
  'rgba(0, 0, 255, 0.5)',
  'rgba(51, 51, 255, 0.5)',
  'rgba(0, 0, 204, 0.5)',
  'rgba(102, 102, 255, 0.5)',
  'rgba(51, 51, 204, 0.5)',
  'rgba(0, 0, 153, 0.5)',
  'rgba(153, 153, 255, 0.5)',
  'rgba(102, 102, 204, 0.5)',
  'rgba(51, 51, 153, 0.5)',
  'rgba(0, 0, 102, 0.5)',
  'rgba(204, 204, 255, 0.5)',
  'rgba(153, 153, 204, 0.5)',
  'rgba(102, 102, 153, 0.5)',
  'rgba(51, 51, 102, 0.5)',
  'rgba(0, 0, 51, 0.5)',
  'rgba(0, 51, 255, 0.5)',
  'rgba(51, 102, 255, 0.5)',
  'rgba(0, 51, 204, 0.5)',
  'rgba(0, 102, 255, 0.5)',
  'rgba(102, 153, 255, 0.5)',
  'rgba(51, 102, 204, 0.5)',
  'rgba(0, 51, 153, 0.5)',
  'rgba(51, 153, 255, 0.5)',
  'rgba(0, 102, 204, 0.5)',
  'rgba(0, 153, 255, 0.5)',
  'rgba(153, 204, 255, 0.5)',
  'rgba(102, 153, 204, 0.5)',
  'rgba(51, 102, 153, 0.5)',
  'rgba(0, 51, 102, 0.5)',
  'rgba(102, 204, 255, 0.5)',
  'rgba(51, 153, 204, 0.5)',
  'rgba(0, 102, 153, 0.5)',
  'rgba(51, 204, 255, 0.5)',
  'rgba(0, 153, 204, 0.5)',
  'rgba(0, 204, 255, 0.5)',
  'rgba(0, 255, 255, 0.5)',
  'rgba(51, 255, 255, 0.5)',
  'rgba(0, 204, 204, 0.5)',
  'rgba(102, 255, 255, 0.5)',
  'rgba(51, 204, 204, 0.5)',
  'rgba(0, 153, 153, 0.5)',
  'rgba(153, 255, 255, 0.5)',
  'rgba(102, 204, 204, 0.5)',
  'rgba(51, 153, 153, 0.5)',
  'rgba(0, 102, 102, 0.5)',
  'rgba(204, 255, 255, 0.5)',
  'rgba(153, 204, 204, 0.5)',
  'rgba(102, 153, 153, 0.5)',
  'rgba(51, 102, 102, 0.5)',
  'rgba(0, 51, 51, 0.5)',
  'rgba(0, 255, 204, 0.5)',
  'rgba(51, 255, 204, 0.5)',
  'rgba(0, 204, 153, 0.5)',
  'rgba(102, 255, 204, 0.5)',
  'rgba(51, 204, 153, 0.5)',
  'rgba(0, 153, 102, 0.5)',
  'rgba(153, 255, 204, 0.5)',
  'rgba(102, 204, 153, 0.5)',
  'rgba(51, 153, 102, 0.5)',
  'rgba(0, 102, 51, 0.5)',
  'rgba(0, 255, 153, 0.5)',
  'rgba(51, 255, 153, 0.5)',
  'rgba(0, 204, 102, 0.5)',
  'rgba(102, 255, 153, 0.5)',
  'rgba(51, 204, 102, 0.5)',
  'rgba(0, 153, 51, 0.5)',
  'rgba(0, 255, 102, 0.5)',
  'rgba(51, 255, 102, 0.5)',
  'rgba(0, 204, 51, 0.5)',
  'rgba(0, 255, 51, 0.5)',
  'rgba(0, 255, 0, 0.5)',
  'rgba(51, 255, 51, 0.5)',
  'rgba(0, 204, 0, 0.5)',
  'rgba(102, 255, 102, 0.5)',
  'rgba(51, 204, 51, 0.5)',
  'rgba(0, 153, 0, 0.5)',
  'rgba(153, 255, 153, 0.5)',
  'rgba(102, 204, 102, 0.5)',
  'rgba(51, 153, 51, 0.5)',
  'rgba(0, 102, 0, 0.5)',
  'rgba(204, 255, 204, 0.5)',
  'rgba(153, 204, 153, 0.5)',
  'rgba(102, 153, 102, 0.5)',
  'rgba(51, 102, 51, 0.5)',
  'rgba(0, 51, 0, 0.5)',
  'rgba(51, 255, 0, 0.5)',
  'rgba(102, 255, 51, 0.5)',
  'rgba(51, 204, 0, 0.5)',
  'rgba(102, 255, 0, 0.5)',
  'rgba(153, 255, 102, 0.5)',
  'rgba(102, 204, 51, 0.5)',
  'rgba(51, 153, 0, 0.5)',
  'rgba(153, 255, 51, 0.5)',
  'rgba(102, 204, 0, 0.5)',
  'rgba(153, 255, 0, 0.5)',
  'rgba(204, 255, 153, 0.5)',
  'rgba(153, 204, 102, 0.5)',
  'rgba(102, 153, 51, 0.5)',
  'rgba(51, 102, 0, 0.5)',
  'rgba(204, 255, 102, 0.5)',
  'rgba(153, 204, 51, 0.5)',
  'rgba(102, 153, 0, 0.5)',
  'rgba(204, 255, 51, 0.5)',
  'rgba(153, 204, 0, 0.5)',
  'rgba(204, 255, 0, 0.5)',
  'rgba(255, 255, 0, 0.5)',
  'rgba(255, 255, 51, 0.5)',
  'rgba(204, 204, 0, 0.5)',
  'rgba(255, 255, 102, 0.5)',
  'rgba(204, 204, 51, 0.5)',
  'rgba(153, 153, 0, 0.5)',
  'rgba(255, 255, 153, 0.5)',
  'rgba(204, 204, 102, 0.5)',
  'rgba(153, 153, 51, 0.5)',
  'rgba(102, 102, 0, 0.5)',
  'rgba(255, 255, 204, 0.5)',
  'rgba(204, 204, 153, 0.5)',
  'rgba(153, 153, 102, 0.5)',
  'rgba(102, 102, 51, 0.5)',
  'rgba(51, 51, 0, 0.5)',
  'rgba(255, 204, 0, 0.5)',
  'rgba(255, 204, 51, 0.5)',
  'rgba(204, 153, 0, 0.5)',
  'rgba(255, 204, 102, 0.5)',
  'rgba(204, 153, 51, 0.5)',
  'rgba(153, 102, 0, 0.5)',
  'rgba(255, 204, 153, 0.5)',
  'rgba(204, 153, 102, 0.5)',
  'rgba(153, 102, 51, 0.5)',
  'rgba(102, 51, 0, 0.5)',
  'rgba(255, 153, 0, 0.5)',
  'rgba(255, 153, 51, 0.5)',
  'rgba(204, 102, 0, 0.5)',
  'rgba(255, 153, 102, 0.5)',
  'rgba(204, 102, 51, 0.5)',
  'rgba(153, 51, 0, 0.5)',
  'rgba(255, 102, 0, 0.5)',
  'rgba(255, 102, 51, 0.5)',
  'rgba(204, 51, 0, 0.5)',
  'rgba(255, 51, 0, 0.5)',
  'rgba(255, 0, 0, 0.5)',
  'rgba(255, 51, 51, 0.5)',
  'rgba(204, 0, 0, 0.5)',
  'rgba(255, 102, 102, 0.5)',
  'rgba(204, 51, 51, 0.5)',
  'rgba(153, 0, 0, 0.5)',
  'rgba(255, 153, 153, 0.5)',
  'rgba(204, 102, 102, 0.5)',
  'rgba(153, 51, 51, 0.5)',
  'rgba(102, 0, 0, 0.5)',
  'rgba(255, 204, 204, 0.5)',
  'rgba(204, 153, 153, 0.5)',
  'rgba(153, 102, 102, 0.5)',
  'rgba(102, 51, 51, 0.5)',
  'rgba(51, 0, 0, 0.5)',
  'rgba(255, 0, 51, 0.5)',
  'rgba(255, 51, 102, 0.5)',
  'rgba(204, 0, 51, 0.5)',
  'rgba(255, 0, 102, 0.5)',
  'rgba(255, 102, 153, 0.5)',
  'rgba(204, 51, 102, 0.5)',
  'rgba(153, 0, 51, 0.5)',
  'rgba(255, 51, 153, 0.5)',
  'rgba(204, 0, 102, 0.5)',
  'rgba(255, 0, 153, 0.5)',
  'rgba(255, 153, 204, 0.5)',
  'rgba(204, 102, 153, 0.5)',
  'rgba(153, 51, 102, 0.5)',
  'rgba(102, 0, 51, 0.5)',
  'rgba(255, 102, 204, 0.5)',
  'rgba(204, 51, 153, 0.5)',
  'rgba(153, 0, 102, 0.5)',
  'rgba(255, 51, 204, 0.5)',
  'rgba(204, 0, 153, 0.5)',
  'rgba(255, 0, 204, 0.5)',
];

// simple & consistent hash for user id
function hashAlgo(input: string, collection: Array<any>): number {
  const justNums = +input.toLowerCase().replace(/[a-z\-]/g, '');
  return Math.floor(justNums * 13) % collection.length;
}

function generateItemFromHash<T>(id: string, collection: Array<T>): T {
  const hashIdx = hashAlgo(id, collection);
  return collection[hashIdx];
}

export { ANIMALS, ADJECTIVES, COLORS, generateItemFromHash };
